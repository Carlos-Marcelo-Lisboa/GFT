// <auto-generated />
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using RestaurantOrderApp.DAL;

namespace RestaurantOrderApp.DAL.Migrations
{
    [DbContext(typeof(RestaurantOrderAppContext))]
    partial class RestaurantOrderAppContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "3.1.4")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("RestaurantOrderApp.DAL.OrderOption", b =>
                {
                    b.Property<int>("DishType")
                        .HasColumnType("int");

                    b.Property<int>("TimeOfDay")
                        .HasColumnType("int");

                    b.Property<int>("MaxQuantity")
                        .HasColumnType("int");

                    b.Property<int>("MinQuantity")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("DishType", "TimeOfDay");

                    b.ToTable("OrderOptions");

                    b.HasData(
                        new
                        {
                            DishType = 1,
                            TimeOfDay = 0,
                            MaxQuantity = 1,
                            MinQuantity = 1,
                            Name = "eggs"
                        },
                        new
                        {
                            DishType = 2,
                            TimeOfDay = 0,
                            MaxQuantity = 1,
                            MinQuantity = 1,
                            Name = "toast"
                        },
                        new
                        {
                            DishType = 3,
                            TimeOfDay = 0,
                            MaxQuantity = 100,
                            MinQuantity = 1,
                            Name = "coffee"
                        },
                        new
                        {
                            DishType = 1,
                            TimeOfDay = 1,
                            MaxQuantity = 1,
                            MinQuantity = 1,
                            Name = "steak"
                        },
                        new
                        {
                            DishType = 2,
                            TimeOfDay = 1,
                            MaxQuantity = 100,
                            MinQuantity = 1,
                            Name = "potato"
                        },
                        new
                        {
                            DishType = 3,
                            TimeOfDay = 1,
                            MaxQuantity = 1,
                            MinQuantity = 1,
                            Name = "wine"
                        },
                        new
                        {
                            DishType = 4,
                            TimeOfDay = 1,
                            MaxQuantity = 1,
                            MinQuantity = 1,
                            Name = "cake"
                        });
                });
#pragma warning restore 612, 618
        }
    }
}
